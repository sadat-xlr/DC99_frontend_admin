{"version":3,"file":"react-tabs.production.min.js","sources":["../src/helpers/elementTypes.js","../src/helpers/childrenDeepMap.js","../node_modules/clsx/dist/clsx.m.js","../src/helpers/count.js","../src/components/UncontrolledTabs.js","../src/components/Tabs.js","../src/components/TabList.js","../src/components/Tab.js","../src/components/TabPanel.js"],"sourcesContent":["function makeTypeChecker(tabsRole) {\n  return (element) => !!element.type && element.type.tabsRole === tabsRole;\n}\n\nexport const isTab = makeTypeChecker('Tab');\nexport const isTabList = makeTypeChecker('TabList');\nexport const isTabPanel = makeTypeChecker('TabPanel');\n","import { Children, cloneElement } from 'react';\nimport { isTabPanel, isTab, isTabList } from './elementTypes';\n\nfunction isTabChild(child) {\n  return isTab(child) || isTabList(child) || isTabPanel(child);\n}\n\nexport function deepMap(children, callback) {\n  return Children.map(children, (child) => {\n    // null happens when conditionally rendering TabPanel/Tab\n    // see https://github.com/reactjs/react-tabs/issues/37\n    if (child === null) return null;\n\n    if (isTabChild(child)) {\n      return callback(child);\n    }\n\n    if (\n      child.props &&\n      child.props.children &&\n      typeof child.props.children === 'object'\n    ) {\n      // Clone the child that has children and map them too\n      return cloneElement(child, {\n        ...child.props,\n        children: deepMap(child.props.children, callback),\n      });\n    }\n\n    return child;\n  });\n}\n\nexport function deepForEach(children, callback) {\n  return Children.forEach(children, (child) => {\n    // null happens when conditionally rendering TabPanel/Tab\n    // see https://github.com/reactjs/react-tabs/issues/37\n    if (child === null) return;\n\n    if (isTab(child) || isTabPanel(child)) {\n      callback(child);\n    } else if (\n      child.props &&\n      child.props.children &&\n      typeof child.props.children === 'object'\n    ) {\n      if (isTabList(child)) callback(child);\n      deepForEach(child.props.children, callback);\n    }\n  });\n}\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { deepForEach } from './childrenDeepMap';\nimport { isTab } from './elementTypes';\n\nexport function getTabsCount(children) {\n  let tabCount = 0;\n  deepForEach(children, (child) => {\n    if (isTab(child)) tabCount++;\n  });\n\n  return tabCount;\n}\n","import PropTypes from 'prop-types';\nimport React, { cloneElement, useRef, useId } from 'react';\nimport cx from 'clsx';\nimport { childrenPropType } from '../helpers/propTypes';\nimport { getTabsCount as getTabsCountHelper } from '../helpers/count';\nimport { deepMap } from '../helpers/childrenDeepMap';\nimport { isTabList, isTabPanel, isTab } from '../helpers/elementTypes';\n\nfunction isNode(node) {\n  return node && 'getAttribute' in node;\n}\n\n// Determine if a node from event.target is a Tab element\nfunction isTabNode(node) {\n  return isNode(node) && node.getAttribute('data-rttab');\n}\n\n// Determine if a tab node is disabled\nfunction isTabDisabled(node) {\n  return isNode(node) && node.getAttribute('aria-disabled') === 'true';\n}\n\nlet canUseActiveElement;\n\nfunction determineCanUseActiveElement(environment) {\n  const env =\n    environment || (typeof window !== 'undefined' ? window : undefined);\n\n  try {\n    canUseActiveElement = !!(\n      typeof env !== 'undefined' &&\n      env.document &&\n      env.document.activeElement\n    );\n  } catch (e) {\n    // Work around for IE bug when accessing document.activeElement in an iframe\n    // Refer to the following resources:\n    // http://stackoverflow.com/a/10982960/369687\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12733599\n    // istanbul ignore next\n    canUseActiveElement = false;\n  }\n}\n\nconst defaultProps = {\n  className: 'react-tabs',\n  focus: false,\n};\n\nconst propTypes = {\n  children: childrenPropType,\n  direction: PropTypes.oneOf(['rtl', 'ltr']),\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.object,\n  ]),\n  disabledTabClassName: PropTypes.string,\n  disableUpDownKeys: PropTypes.bool,\n  disableLeftRightKeys: PropTypes.bool,\n  domRef: PropTypes.func,\n  focus: PropTypes.bool,\n  forceRenderTabPanel: PropTypes.bool,\n  onSelect: PropTypes.func.isRequired,\n  selectedIndex: PropTypes.number.isRequired,\n  selectedTabClassName: PropTypes.string,\n  selectedTabPanelClassName: PropTypes.string,\n  environment: PropTypes.object,\n};\n\nconst UncontrolledTabs = (props) => {\n  let tabNodes = useRef([]);\n  let tabIds = useRef([]);\n  const ref = useRef();\n\n  function setSelected(index, event) {\n    // Check index boundary\n    if (index < 0 || index >= getTabsCount()) return;\n\n    const { onSelect, selectedIndex } = props;\n\n    // Call change event handler\n    onSelect(index, selectedIndex, event);\n  }\n\n  function getNextTab(index) {\n    const count = getTabsCount();\n\n    // Look for non-disabled tab from index to the last tab on the right\n    for (let i = index + 1; i < count; i++) {\n      if (!isTabDisabled(getTab(i))) {\n        return i;\n      }\n    }\n\n    // If no tab found, continue searching from first on left to index\n    for (let i = 0; i < index; i++) {\n      if (!isTabDisabled(getTab(i))) {\n        return i;\n      }\n    }\n\n    // All tabs are disabled, return index\n    /* istanbul ignore next */\n    return index;\n  }\n\n  function getPrevTab(index) {\n    let i = index;\n\n    // Look for non-disabled tab from index to first tab on the left\n    while (i--) {\n      if (!isTabDisabled(getTab(i))) {\n        return i;\n      }\n    }\n\n    // If no tab found, continue searching from last tab on right to index\n    i = getTabsCount();\n    while (i-- > index) {\n      if (!isTabDisabled(getTab(i))) {\n        return i;\n      }\n    }\n\n    // All tabs are disabled, return index\n    /* istanbul ignore next */\n    return index;\n  }\n\n  function getFirstTab() {\n    const count = getTabsCount();\n\n    // Look for non disabled tab from the first tab\n    for (let i = 0; i < count; i++) {\n      if (!isTabDisabled(getTab(i))) {\n        return i;\n      }\n    }\n\n    /* istanbul ignore next */\n    return null;\n  }\n\n  function getLastTab() {\n    let i = getTabsCount();\n\n    // Look for non disabled tab from the last tab\n    while (i--) {\n      if (!isTabDisabled(getTab(i))) {\n        return i;\n      }\n    }\n\n    /* istanbul ignore next */\n    return null;\n  }\n\n  function getTabsCount() {\n    const { children } = props;\n    return getTabsCountHelper(children);\n  }\n\n  function getTab(index) {\n    return tabNodes.current[`tabs-${index}`];\n  }\n\n  function getChildren() {\n    let index = 0;\n    const {\n      children,\n      disabledTabClassName,\n      focus,\n      forceRenderTabPanel,\n      selectedIndex,\n      selectedTabClassName,\n      selectedTabPanelClassName,\n      environment,\n    } = props;\n\n    tabIds.current = tabIds.current || [];\n    let diff = tabIds.current.length - getTabsCount();\n\n    // Add ids if new tabs have been added\n    // Don't bother removing ids, just keep them in case they are added again\n    // This is more efficient, and keeps the uuid counter under control\n    const id = useId();\n    while (diff++ < 0) {\n      tabIds.current.push(`${id}${tabIds.current.length}`);\n    }\n\n    // Map children to dynamically setup refs\n    return deepMap(children, (child) => {\n      let result = child;\n\n      // Clone TabList and Tab components to have refs\n      if (isTabList(child)) {\n        let listIndex = 0;\n\n        // Figure out if the current focus in the DOM is set on a Tab\n        // If it is we should keep the focus on the next selected tab\n        let wasTabFocused = false;\n\n        if (canUseActiveElement == null) {\n          determineCanUseActiveElement(environment);\n        }\n\n        const env =\n          environment || (typeof window !== 'undefined' ? window : undefined);\n        if (canUseActiveElement && env) {\n          wasTabFocused = React.Children.toArray(child.props.children)\n            .filter(isTab)\n            .some((tab, i) => env.document.activeElement === getTab(i));\n        }\n\n        result = cloneElement(child, {\n          children: deepMap(child.props.children, (tab) => {\n            const key = `tabs-${listIndex}`;\n            const selected = selectedIndex === listIndex;\n\n            const props = {\n              tabRef: (node) => {\n                tabNodes.current[key] = node;\n              },\n              id: tabIds.current[listIndex],\n              selected,\n              focus: selected && (focus || wasTabFocused),\n            };\n\n            if (selectedTabClassName)\n              props.selectedClassName = selectedTabClassName;\n            if (disabledTabClassName)\n              props.disabledClassName = disabledTabClassName;\n\n            listIndex++;\n\n            return cloneElement(tab, props);\n          }),\n        });\n      } else if (isTabPanel(child)) {\n        const props = {\n          id: tabIds.current[index],\n          selected: selectedIndex === index,\n        };\n\n        if (forceRenderTabPanel) props.forceRender = forceRenderTabPanel;\n        if (selectedTabPanelClassName)\n          props.selectedClassName = selectedTabPanelClassName;\n\n        index++;\n\n        result = cloneElement(child, props);\n      }\n\n      return result;\n    });\n  }\n\n  function handleKeyDown(e) {\n    const { direction, disableUpDownKeys, disableLeftRightKeys } = props;\n    if (isTabFromContainer(e.target)) {\n      let { selectedIndex: index } = props;\n      let preventDefault = false;\n      let useSelectedIndex = false;\n\n      if (\n        e.code === 'Space' ||\n        e.keyCode === 32 /* space */ ||\n        e.code === 'Enter' ||\n        e.keyCode === 13 /* enter */\n      ) {\n        preventDefault = true;\n        useSelectedIndex = false;\n        handleClick(e);\n      }\n\n      // keyCode is deprecated and only used here for IE\n\n      if (\n        (!disableLeftRightKeys &&\n          (e.keyCode === 37 || e.code === 'ArrowLeft')) /* arrow left */ ||\n        (!disableUpDownKeys &&\n          (e.keyCode === 38 || e.code === 'ArrowUp')) /* arrow up */\n      ) {\n        // Select next tab to the left, validate if up arrow is not disabled\n        if (direction === 'rtl') {\n          index = getNextTab(index);\n        } else {\n          index = getPrevTab(index);\n        }\n        preventDefault = true;\n        useSelectedIndex = true;\n      } else if (\n        (!disableLeftRightKeys &&\n          (e.keyCode === 39 || e.code === 'ArrowRight')) /* arrow right */ ||\n        (!disableUpDownKeys &&\n          (e.keyCode === 40 || e.code === 'ArrowDown')) /* arrow down */\n      ) {\n        // Select next tab to the right, validate if down arrow is not disabled\n        if (direction === 'rtl') {\n          index = getPrevTab(index);\n        } else {\n          index = getNextTab(index);\n        }\n        preventDefault = true;\n        useSelectedIndex = true;\n      } else if (e.keyCode === 35 || e.code === 'End') {\n        // Select last tab (End key)\n        index = getLastTab();\n        preventDefault = true;\n        useSelectedIndex = true;\n      } else if (e.keyCode === 36 || e.code === 'Home') {\n        // Select first tab (Home key)\n        index = getFirstTab();\n        preventDefault = true;\n        useSelectedIndex = true;\n      }\n\n      // This prevents scrollbars from moving around\n      if (preventDefault) {\n        e.preventDefault();\n      }\n\n      // Only use the selected index in the state if we're not using the tabbed index\n      if (useSelectedIndex) {\n        setSelected(index, e);\n      }\n    }\n  }\n\n  function handleClick(e) {\n    let node = e.target;\n    do {\n      if (isTabFromContainer(node)) {\n        if (isTabDisabled(node)) {\n          return;\n        }\n\n        const index = [].slice\n          .call(node.parentNode.children)\n          .filter(isTabNode)\n          .indexOf(node);\n        setSelected(index, e);\n        return;\n      }\n    } while ((node = node.parentNode) != null);\n  }\n\n  /**\n   * Determine if a node from event.target is a Tab element for the current Tabs container.\n   * If the clicked element is not a Tab, it returns false.\n   * If it finds another Tabs container between the Tab and `this`, it returns false.\n   */\n  function isTabFromContainer(node) {\n    // return immediately if the clicked element is not a Tab.\n    if (!isTabNode(node)) {\n      return false;\n    }\n\n    // Check if the first occurrence of a Tabs container is `this` one.\n    let nodeAncestor = node.parentElement;\n    do {\n      if (nodeAncestor === ref.current) return true;\n      if (nodeAncestor.getAttribute('data-rttabs')) break;\n\n      nodeAncestor = nodeAncestor.parentElement;\n    } while (nodeAncestor);\n\n    return false;\n  }\n  const {\n    children, // unused\n    className,\n    disabledTabClassName, // unused\n    domRef,\n    focus, // unused\n    forceRenderTabPanel, // unused\n    onSelect, // unused\n    selectedIndex, // unused\n    selectedTabClassName, // unused\n    selectedTabPanelClassName, // unused\n    environment, // unused\n    disableUpDownKeys, // unused\n    disableLeftRightKeys, // unused\n    ...attributes\n  } = props;\n  return (\n    <div\n      {...attributes}\n      className={cx(className)}\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n      ref={(node) => {\n        ref.current = node;\n        if (domRef) domRef(node);\n      }}\n      data-rttabs\n    >\n      {getChildren()}\n    </div>\n  );\n};\nUncontrolledTabs.defaultProps = defaultProps;\nUncontrolledTabs.propTypes = propTypes;\nexport default UncontrolledTabs;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport {\n  childrenPropType,\n  onSelectPropType,\n  selectedIndexPropType,\n} from '../helpers/propTypes';\nimport UncontrolledTabs from './UncontrolledTabs';\nimport { getTabsCount } from '../helpers/count';\n\nconst MODE_CONTROLLED = 0;\nconst MODE_UNCONTROLLED = 1;\nconst propTypes = {\n  children: childrenPropType,\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.object,\n  ]),\n  defaultFocus: PropTypes.bool,\n  defaultIndex: PropTypes.number,\n  direction: PropTypes.oneOf(['rtl', 'ltr']),\n  disabledTabClassName: PropTypes.string,\n  disableUpDownKeys: PropTypes.bool,\n  disableLeftRightKeys: PropTypes.bool,\n  domRef: PropTypes.func,\n  environment: PropTypes.object,\n  focusTabOnClick: PropTypes.bool,\n  forceRenderTabPanel: PropTypes.bool,\n  onSelect: onSelectPropType,\n  selectedIndex: selectedIndexPropType,\n  selectedTabClassName: PropTypes.string,\n  selectedTabPanelClassName: PropTypes.string,\n};\nconst defaultProps = {\n  defaultFocus: false,\n  focusTabOnClick: true,\n  forceRenderTabPanel: false,\n  selectedIndex: null,\n  defaultIndex: null,\n  environment: null,\n  disableUpDownKeys: false,\n  disableLeftRightKeys: false,\n};\n\nconst getModeFromProps = (props) => {\n  return props.selectedIndex === null ? MODE_UNCONTROLLED : MODE_CONTROLLED;\n};\n\nconst checkForIllegalModeChange = (props, mode) => {\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    mode != undefined &&\n    mode !== getModeFromProps(props)\n  ) {\n    throw new Error(\n      `Switching between controlled mode (by using \\`selectedIndex\\`) and uncontrolled mode is not supported in \\`Tabs\\`.\nFor more information about controlled and uncontrolled mode of react-tabs see https://github.com/reactjs/react-tabs#controlled-vs-uncontrolled-mode.`,\n    );\n  }\n};\n\n/**\n * State:\n *   mode: Initialized only once from props and never changes\n *   selectedIndex: null if controlled mode, otherwise initialized with prop defaultIndex, changed on selection of tabs, has effect to ensure it never gets out of bound\n *   focus: Because we never remove focus from the Tabs this state is only used to indicate that we should focus the current tab.\n *          It is initialized from the prop defaultFocus, and after the first render it is reset back to false. Later it can become true again when using keys to navigate the tabs.\n */\nconst Tabs = (props) => {\n  const { children, defaultFocus, defaultIndex, focusTabOnClick, onSelect } =\n    props;\n\n  const [focus, setFocus] = useState(defaultFocus);\n  const [mode] = useState(getModeFromProps(props));\n  const [selectedIndex, setSelectedIndex] = useState(\n    mode === MODE_UNCONTROLLED ? defaultIndex || 0 : null,\n  );\n\n  useEffect(() => {\n    // Reset focus after initial render, see comment above\n    setFocus(false);\n  }, []);\n\n  if (mode === MODE_UNCONTROLLED) {\n    // Ensure that we handle removed tabs and don't let selectedIndex get out of bounds\n    const tabsCount = getTabsCount(children);\n    useEffect(() => {\n      if (selectedIndex != null) {\n        const maxTabIndex = Math.max(0, tabsCount - 1);\n        setSelectedIndex(Math.min(selectedIndex, maxTabIndex));\n      }\n    }, [tabsCount]);\n  }\n\n  checkForIllegalModeChange(props, mode);\n\n  const handleSelected = (index, last, event) => {\n    // Call change event handler\n    if (typeof onSelect === 'function') {\n      // Check if the change event handler cancels the tab change\n      if (onSelect(index, last, event) === false) return;\n    }\n\n    // Always set focus on tabs unless it is disabled\n    if (focusTabOnClick) {\n      setFocus(true);\n    }\n\n    if (mode === MODE_UNCONTROLLED) {\n      // Update selected index\n      setSelectedIndex(index);\n    }\n  };\n\n  let subProps = { ...props };\n\n  subProps.focus = focus;\n  subProps.onSelect = handleSelected;\n\n  if (selectedIndex != null) {\n    subProps.selectedIndex = selectedIndex;\n  }\n  delete subProps.defaultFocus;\n  delete subProps.defaultIndex;\n  delete subProps.focusTabOnClick;\n  return <UncontrolledTabs {...subProps}>{children}</UncontrolledTabs>;\n};\n\nTabs.propTypes = propTypes;\nTabs.defaultProps = defaultProps;\nTabs.tabsRole = 'Tabs';\n\nexport default Tabs;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport cx from 'clsx';\n\nconst defaultProps = {\n  className: 'react-tabs__tab-list',\n};\nconst propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.object,\n  ]),\n};\nconst TabList = (props) => {\n  const { children, className, ...attributes } = props;\n\n  return (\n    <ul {...attributes} className={cx(className)} role=\"tablist\">\n      {children}\n    </ul>\n  );\n};\n\nTabList.tabsRole = 'TabList';\nTabList.propTypes = propTypes;\nTabList.defaultProps = defaultProps;\nexport default TabList;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useRef } from 'react';\nimport cx from 'clsx';\n\nconst DEFAULT_CLASS = 'react-tabs__tab';\nconst defaultProps = {\n  className: DEFAULT_CLASS,\n  disabledClassName: `${DEFAULT_CLASS}--disabled`,\n  focus: false,\n  id: null,\n  selected: false,\n  selectedClassName: `${DEFAULT_CLASS}--selected`,\n};\n\nconst propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.object,\n    PropTypes.string,\n  ]),\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.object,\n  ]),\n  disabled: PropTypes.bool,\n  disabledClassName: PropTypes.string,\n  focus: PropTypes.bool, // private\n  id: PropTypes.string, // private\n  selected: PropTypes.bool, // private\n  selectedClassName: PropTypes.string,\n  tabIndex: PropTypes.string,\n  tabRef: PropTypes.func, // private\n};\n\nconst Tab = (props) => {\n  let nodeRef = useRef();\n  const {\n    children,\n    className,\n    disabled,\n    disabledClassName,\n    focus,\n    id,\n    selected,\n    selectedClassName,\n    tabIndex,\n    tabRef,\n    ...attributes\n  } = props;\n\n  useEffect(() => {\n    if (selected && focus) {\n      nodeRef.current.focus();\n    }\n  }, [selected, focus]);\n\n  return (\n    <li\n      {...attributes}\n      className={cx(className, {\n        [selectedClassName]: selected,\n        [disabledClassName]: disabled,\n      })}\n      ref={(node) => {\n        nodeRef.current = node;\n        if (tabRef) tabRef(node);\n      }}\n      role=\"tab\"\n      id={`tab${id}`}\n      aria-selected={selected ? 'true' : 'false'}\n      aria-disabled={disabled ? 'true' : 'false'}\n      aria-controls={`panel${id}`}\n      tabIndex={tabIndex || (selected ? '0' : null)}\n      data-rttab\n    >\n      {children}\n    </li>\n  );\n};\nTab.propTypes = propTypes;\n\nTab.tabsRole = 'Tab';\nTab.defaultProps = defaultProps;\nexport default Tab;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport cx from 'clsx';\n\nconst DEFAULT_CLASS = 'react-tabs__tab-panel';\nconst defaultProps = {\n  className: DEFAULT_CLASS,\n  forceRender: false,\n  selectedClassName: `${DEFAULT_CLASS}--selected`,\n};\nconst propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.object,\n  ]),\n  forceRender: PropTypes.bool,\n  id: PropTypes.string, // private\n  selected: PropTypes.bool, // private\n  selectedClassName: PropTypes.string,\n};\nconst TabPanel = (props) => {\n  const {\n    children,\n    className,\n    forceRender,\n    id,\n    selected,\n    selectedClassName,\n    ...attributes\n  } = props;\n\n  return (\n    <div\n      {...attributes}\n      className={cx(className, {\n        [selectedClassName]: selected,\n      })}\n      role=\"tabpanel\"\n      id={`panel${id}`}\n      aria-labelledby={`tab${id}`}\n    >\n      {forceRender || selected ? children : null}\n    </div>\n  );\n};\n\nTabPanel.tabsRole = 'TabPanel';\nTabPanel.propTypes = propTypes;\nTabPanel.defaultProps = defaultProps;\nexport default TabPanel;\n"],"names":["makeTypeChecker","tabsRole","element","type","isTab","isTabList","deepMap","children","callback","Children","map","child","isTabPanel","isTabChild","props","cloneElement","deepForEach","forEach","r","e","t","f","n","Array","isArray","length","clsx","arguments","tabCount","_excluded","node","isTabNode","getAttribute","isTabDisabled","isNode","tabNodes","useRef","setSelected","index","event","getTabsCount","onSelect","selectedIndex","getNextTab","i","count","getTab","_i","getPrevTab","current","target","isTabFromContainer","slice","call","parentNode","filter","indexOf","parentElement","nodeAncestor","ref","className","disabledTabClassName","domRef","focus","forceRenderTabPanel","selectedTabClassName","selectedTabPanelClassName","environment","disableUpDownKeys","disableLeftRightKeys","attributes","React","createElement","Object","assign","cx","onClick","handleClick","onKeyDown","direction","preventDefault","useSelectedIndex","code","keyCode","getLastTab","getFirstTab","tabIds","diff","id","useId","push","result","wasTabFocused","canUseActiveElement","env","window","undefined","document","activeElement","determineCanUseActiveElement","toArray","some","tab","listIndex","tabRef","key","selected","selectedClassName","disabledClassName","forceRender","getChildren","UncontrolledTabs","defaultProps","Tabs","defaultFocus","defaultIndex","focusTabOnClick","_useState","useState","setFocus","getModeFromProps","mode","_useState2","setSelectedIndex","_useState3","useEffect","maxTabIndex","Math","max","tabsCount","min","subProps","last","TabList","_objectWithoutPropertiesLoose","role","DEFAULT_CLASS","Tab","_cx","nodeRef","disabled","tabIndex","TabPanel"],"mappings":"uWAAA,SAASA,EAAgBC,GACvB,OAAO,SAACC,GAAO,QAAOA,EAAQC,MAAQD,EAAQC,KAAKF,WAAaA,CAAQ,CAC1E,CAEaG,IAAAA,EAAQJ,EAAgB,OACfK,EAAGL,EAAgB,aACfA,EAAgB,qBCCnBM,EAACC,EAAUC,GAChC,OAAOC,WAASC,IAAIH,GAAU,SAACI,GAG7B,OAAc,OAAVA,EAA2B,KARnC,SAAoBA,GAClB,OAAOP,EAAMO,IAAUN,EAAUM,IAAUC,EAAWD,EACxD,CAQQE,CAAWF,GACEH,EAACG,GAIhBA,EAAMG,OACNH,EAAMG,MAAMP,UACoB,iBAAzBI,EAAMG,MAAMP,WAGAQ,aAACJ,EACfA,OAAAA,OAAAA,CAAAA,EAAAA,EAAMG,OACTP,SAAUD,EAAQK,EAAMG,MAAMP,SAAUC,MAK9CG,CAAA,GACF,CAEgBK,SAAAA,EAAYT,EAAUC,GACpC,OAAeC,EAAAA,SAACQ,QAAQV,GAAU,SAACI,GAGnB,OAAVA,IAEAP,EAAMO,IAAUC,EAAWD,GAC7BH,EAASG,GAETA,EAAMG,OACNH,EAAMG,MAAMP,UACoB,iBAApBI,EAACG,MAAMP,WAEfF,EAAUM,IAAQH,EAASG,GAC/BK,EAAYL,EAAMG,MAAMP,SAAUC,IAEtC,GACF,uIClDA,SAASU,EAAEC,GAAG,IAAIC,EAAEC,EAAEC,EAAE,GAAG,GAAG,iBAAiBH,GAAG,iBAAiBA,EAAEG,GAAGH,OAAO,GAAG,iBAAiBA,EAAE,GAAGI,MAAMC,QAAQL,GAAG,IAAIC,EAAE,EAAEA,EAAED,EAAEM,OAAOL,IAAID,EAAEC,KAAKC,EAAEH,EAAEC,EAAEC,OAAOE,IAAIA,GAAG,KAAKA,GAAGD,QAAQ,IAAID,KAAKD,EAAEA,EAAEC,KAAKE,IAAIA,GAAG,KAAKA,GAAGF,GAAG,OAAOE,CAAC,CAAQ,SAASI,IAAO,IAAI,IAAIP,EAAEC,EAAEC,EAAE,EAAEC,EAAE,GAAGD,EAAEM,UAAUF,SAASN,EAAEQ,UAAUN,QAAQD,EAAEF,EAAEC,MAAMG,IAAIA,GAAG,KAAKA,GAAGF,GAAG,OAAOE,CAAC,CCG1V,WAAsBf,GAC3B,MAAe,EAKf,OAJAS,EAAYT,GAAU,SAACI,GACjBP,EAAMO,IAAQiB,GACpB,IAGFA,CAAA,CCVA,MAAAC,EAAA,CAAA,WAAA,YAAA,uBAAA,SAAA,QAAA,sBAAA,WAAA,gBAAA,uBAAA,4BAAA,cAAA,oBAAA,wBAQA,WAAgBC,GACd,OAAWA,GAAI,iBAAkBA,CACnC,CAGA,SAASC,EAAUD,GACjB,SAAcA,IAASA,EAAKE,aAAa,aAC3C,CAGA,SAAsBC,EAACH,GACrB,OAAaI,EAACJ,IAAgD,SAAvCA,EAAKE,aAAa,gBAC3C,CAwBA,MA0ByB,SAAClB,GACxB,IAAYqB,EAAGC,EAAAA,OAAO,MACTA,EAAMA,OAAC,MACRA,EAAMA,SAElB,SAAoBC,EAACC,EAAOC,GAEtBD,EAAQ,GAAKA,GAASE,MAK1BC,EAHoC3B,EAA5B2B,UAGCH,EAH2BxB,EAAlB4B,cAGaH,EACjC,CAEA,SAASI,EAAWL,GAIlB,IAHA,MAAcE,IAGJI,EAAGN,EAAQ,EAAGM,EAAIC,EAAOD,IACjC,IAAKX,EAAca,EAAOF,IACxB,OAAOA,EAKX,IAAK,IAAKG,EAAG,EAAGH,EAAIN,EAAOM,IACzB,IAAKX,EAAca,EAAOF,IACxB,OAAOA,EAMX,OACFN,CAAA,CAEA,SAAmBU,EAACV,GAIlB,IAHA,IAAKM,EAAGN,EAGDM,KACL,IAAKX,EAAca,EAAOF,IACxB,SAMJ,IADAA,EAAIJ,IACGI,KAAMN,GACX,IAAKL,EAAca,EAAOF,IACxB,OAAOA,EAMX,QACF,CA8BA,aAEE,SADqB9B,EAAbP,SAEV,CAEA,SAAeuC,EAACR,GACd,OAAeH,EAACc,QAAgBX,QAAAA,EAClC,CAqKA,WAAqBnB,GACnB,IAAQW,EAAGX,EAAE+B,OACb,GACE,GAAIC,EAAmBrB,GAAO,CAC5B,GAAIG,EAAcH,GAChB,OAQF,YADAO,EAJc,GAAGe,MACdC,KAAKvB,EAAKwB,WAAW/C,UACrBgD,OAAOxB,GACPyB,QAAQ1B,GACQX,EAErB,QACmC,OAA3BW,EAAOA,EAAKwB,YACxB,CAOA,WAA4BxB,GAE1B,IAAKC,EAAUD,GACb,OAAO,EAIT,MAAmBA,EAAK2B,cACxB,EAAG,CACD,GAAIC,IAAiBC,EAAIV,QAAS,OAAO,EACzC,GAAIS,EAAa1B,aAAa,eAAgB,MAE9C0B,EAAeA,EAAaD,aAC9B,OAASC,GAET,QACF,CAgBI5C,EAdFP,SACAqD,IAAAA,EAaE9C,EAbF8C,UAaE9C,EAZF+C,yBACAC,EAWEhD,EAXFgD,OAWEhD,EAVFiD,MAUEjD,EATFkD,oBASElD,EARF2B,SAQE3B,EAPF4B,cAOE5B,EANFmD,qBAMEnD,EALFoD,0BAKEpD,EAJFqD,YAIErD,EAHFsD,kBAGEtD,EAFFuD,qBAAoB,IACjBC,EACDxD,EAAAA,KACJ,OACEyD,EAAA,QAAAC,cAAA,MAAAC,OAAAC,OAAA,GACMJ,EACJ,CAAAV,UAAWe,EAAGf,GACdgB,QAASC,EACTC,UArIJ,SAAuB3D,GACrB,IAAiB4D,EAA8CjE,EAAvDiE,UAAWX,EAA4CtD,EAA5CsD,kBAAmBC,EAAyBvD,EAAzBuD,qBACtC,GAAIlB,EAAmBhC,EAAE+B,QAAS,CAChC,IAA0BZ,EAAKxB,EAAzB4B,cACFsC,GAAiB,EACjBC,GAAmB,EAGV,UAAX9D,EAAE+D,MACY,KAAd/D,EAAEgE,SACS,UAAXhE,EAAE+D,MACY,KAAd/D,EAAEgE,UAEFH,GAAiB,EACjBC,GAAmB,EACnBJ,EAAY1D,KAMVkD,GACe,KAAdlD,EAAEgE,SAA6B,cAAXhE,EAAE+D,QACvBd,GACe,KAAdjD,EAAEgE,SAA6B,YAAXhE,EAAE+D,OAWvBb,GACe,KAAdlD,EAAEgE,SAA6B,eAAXhE,EAAE+D,QACvBd,GACe,KAAdjD,EAAEgE,SAA6B,cAAXhE,EAAE+D,MAUF,KAAd/D,EAAEgE,SAA6B,QAAXhE,EAAE+D,MAE/B5C,EApKN,WAIE,IAHA,IAAIM,EAAIJ,IAGDI,KACL,IAAKX,EAAca,EAAOF,IACxB,OACFA,EAIF,WACF,CAwJcwC,GACRJ,GAAiB,EACjBC,GAAmB,GACI,KAAd9D,EAAEgE,SAA6B,SAAXhE,EAAE+D,OAE/B5C,EAvLN,WAIE,IAHA,IAAMO,EAAQL,MAGD,EAAGI,EAAIC,EAAOD,IACzB,IAAKX,EAAca,EAAOF,IACxB,OAAOA,EAKX,OACF,IAAA,CA2KcyC,GACRL,GAAiB,EACjBC,GAAmB,IAfjB3C,EADgB,QAAdyC,EACM/B,EAAWV,GAEXK,EAAWL,GAErB0C,GAAiB,EACjBC,GAAmB,IAnBjB3C,EADgB,QAAdyC,EACMpC,EAAWL,GAEXU,EAAWV,GAErB0C,GAAiB,EACjBC,GAAmB,GA4BjBD,GACF7D,EAAE6D,iBAIAC,GACF5C,EAAYC,EAAOnB,EAEvB,CACF,EAgEIwC,IAAK,SAAC7B,GACJ6B,EAAIV,QAAUnB,EACVgC,GAAQA,EAAOhC,EACrB,EACA,eAAA,IArOJ,WACE,IAASQ,EAAG,EAEF/B,EAQNO,EARFP,SACAsD,EAOE/C,EAPF+C,qBACAE,EAMEjD,EANFiD,MACAC,EAKElD,EALFkD,oBACAtB,EAIE5B,EAJF4B,cACAuB,EAGEnD,EAHFmD,qBACAC,EAEEpD,EAFFoD,0BACAC,EACErD,EADFqD,YAGFmB,EAAOrC,QAAUqC,EAAOrC,SAAW,GAOnC,IANA,IAAQsC,EAAGD,EAAOrC,QAAQxB,OAASe,IAK7BgD,EAAKC,EAAAA,QACJF,IAAS,GACdD,EAAOrC,QAAQyC,KAAQF,GAAAA,EAAKF,EAAOrC,QAAQxB,QAI7C,OAAcnB,EAACC,GAAU,SAACI,GACxB,IAAIgF,EAAShF,EAGb,GAAIN,EAAUM,GAAQ,CACpB,MAAgB,EAIZiF,GAAgB,EAEO,MAAvBC,GAnLZ,SAAsC1B,GACpC,IAAS2B,EACP3B,IAAkC,2BAAc4B,YAASC,GAE3D,IACEH,SACiB,IAALC,IACVA,EAAIG,WACJH,EAAIG,SAASC,cASjB,CAPE,MAAO/E,GAMP0E,GAAsB,CACxB,CACF,CAkKUM,CAA6BhC,GAG/B,IAAS2B,EACP3B,IAAkC,oBAAL4B,OAAmBA,YAASC,GACvDH,GAAuBC,IACzBF,EAAgBrB,EAAAA,QAAM9D,SAAS2F,QAAQzF,EAAMG,MAAMP,UAChDgD,OAAOnD,GACPiG,MAAK,SAACC,EAAK1D,GAAC,SAASqD,SAASC,gBAAkBpD,EAAOF,EAAE,KAG9D+C,EAAS5E,EAAAA,aAAaJ,EAAO,CAC3BJ,SAAUD,EAAQK,EAAMG,MAAMP,UAAU,SAAC+F,GACvC,MAAoBC,QAAAA,IACH7D,IAAkB6D,EAExBzF,EAAG,CACZ0F,OAAQ,SAAC1E,GACPK,EAASc,QAAQwD,GAAO3E,CAC1B,EACA0D,GAAIF,EAAOrC,QAAQsD,GACnBG,SAAAA,EACA3C,MAAO2C,IAAa3C,GAAS6B,IAU/B,OAPI3B,IACFnD,EAAM6F,kBAAoB1C,GACxBJ,IACF/C,EAAM8F,kBAAoB/C,GAE5B0C,IAEOxF,EAAAA,aAAauF,EAAKxF,EAC3B,KAEJ,MAAO,GAAIF,EAAWD,GAAQ,CAC5B,IAAMG,EAAQ,CACZ0E,GAAIF,EAAOrC,QAAQX,GACnBoE,SAAUhE,IAAkBJ,GAG1B0B,IAAqBlD,EAAM+F,YAAc7C,GACzCE,IACFpD,EAAM6F,kBAAoBzC,GAE5B5B,IAEAqD,EAAS5E,eAAaJ,EAAOG,EAC/B,CAEA,OACF6E,CAAA,GACF,CA8IKmB,GAGP,EACAC,EAAiBC,aAtWI,CACnBpD,UAAW,aACXG,OAAO,GCpCT,IA2DUkD,EAAG,SAACnG,GACZ,MACEA,EADMP,SAAU2G,EAChBpG,EADgBoG,aAAcC,EAC9BrG,EAD8BqG,aAAcC,EAC5CtG,EAD4CsG,gBAAiB3E,EAC7D3B,EAD6D2B,SAG/D4E,EAA0BC,WAASJ,GAA5BnD,EAAOwD,EAAAA,GAAAA,OACCD,EAAAA,EAAQA,SA7BA,SAACxG,GACxB,OAA+B,SAAlB4B,cAnCW,EADF,CAqCxB,CA2B0B8E,CAAiB1G,IAAlC2G,EAAIC,EAAA,GAC+BJ,EAAAA,EAAQA,SAhE1B,IAiEtBG,EAA6BN,GAAgB,EAAI,MAD5CzE,OAAeiF,EAAgBC,EAAA,GAStC,GALAC,EAASA,WAAC,WAERN,GAAS,EACX,GAAG,IAvEqB,IAyEpBE,EAA4B,CAE9B,MAAkBjF,EAAajC,GAC/BsH,EAAAA,WAAU,WACR,GAAqB,MAAjBnF,EAAuB,CACzB,IAAiBoF,EAAGC,KAAKC,IAAI,EAAGC,EAAY,GAC5CN,EAAiBI,KAAKG,IAAIxF,EAAeoF,GAC3C,CACF,GAAG,CAACG,GACN,CAIA,IAkBYE,EAAA1D,OAAAC,OAAA,CAAA,EAAQ5D,GAWpB,OATAqH,EAASpE,MAAQA,EACjBoE,EAAS1F,SArBc,SAACH,EAAO8F,EAAM7F,GAEX,mBAAbE,IAE4B,IAAjCA,EAASH,EAAO8F,EAAM7F,KAIxB6E,GACFG,GAAS,GA/FW,IAkGlBE,GAEFE,EAAiBrF,GAErB,EAOqB,MAAjBI,IACFyF,EAASzF,cAAgBA,UAEZyF,EAACjB,sBACAC,oBACDgB,EAACf,wCACRL,EAAqBoB,EAAW5H,EAC1C,EAGA0G,EAAKD,aAhGgB,CACnBE,cAAc,EACdE,iBAAiB,EACjBpD,qBAAqB,EACrBtB,cAAe,KACfyE,aAAc,KACdhD,YAAa,KACbC,mBAAmB,EACnBC,sBAAsB,GAyFxB4C,EAAKhH,SAAW,OCnIhB,IAAA4B,EAAA,CAAA,WAAA,aAeawG,EAAG,SAACvH,GACf,IAAQP,EAAuCO,EAAvCP,SAAUqD,EAA6B9C,EAA7B8C,UAAcU,EAAUgE,EAAKxH,EAE/Ce,GAAA,OACUyC,EAAAA,QAAAA,cAAAA,KAAAA,OAAAA,OAAAA,GAAAA,GAAYV,UAAWe,EAAGf,GAAY2E,KAAK,YAChDhI,EAGP,EAEA8H,EAAQpI,SAAW,UAEnBoI,EAAQrB,aAvBa,CACnBpD,UAAW,wBCLb,IAAA/B,EAAA,CAAA,WAAA,YAAA,WAAA,oBAAA,QAAA,KAAA,WAAA,oBAAA,WAAA,UAIM2G,EAAgB,kBACJxB,EAAG,CACnBpD,UAAW4E,EACX5B,kBAAsB4B,4BACtBzE,OAAO,EACPyB,GAAI,KACJkB,UAAU,EACVC,kBAAsB6B,6BAwBlBC,EAAM,SAAC3H,GACX,IAAA4H,EAAWC,EAAGvG,EAAMA,SAEV7B,EAWNO,EAXFP,SACAqD,EAUE9C,EAVF8C,UACAgF,EASE9H,EATF8H,SACAhC,EAQE9F,EARF8F,kBACA7C,EAOEjD,EAPFiD,MACAyB,EAME1E,EANF0E,GACAkB,EAKE5F,EALF4F,SACAC,EAIE7F,EAJF6F,kBACAkC,EAGE/H,EAHF+H,SACArC,EAEE1F,EAFF0F,OACGlC,EACDxD,EAAAA,EAEJ+G,GAMA,OANAA,EAASA,WAAC,WACJnB,GAAY3C,GACd4E,EAAQ1F,QAAQc,OAEpB,GAAG,CAAC2C,EAAU3C,IAINO,UAAAA,cAAAA,KAAAA,OAAAA,OAAAA,GAAAA,EACJ,CAAAV,UAAWe,EAAGf,GACX+C,EAAAA,CAAAA,EAAAA,EAAAA,GAAoBD,EACpBE,EAAAA,GAAoBgC,EACpBF,IACH/E,IAAK,SAAC7B,GACJ6G,EAAQ1F,QAAUnB,EACd0E,GAAQA,EAAO1E,EACrB,EACAyG,KAAK,MACL/C,GAAE,MAAQA,EACV,gBAAekB,EAAW,OAAS,QACnC,gBAAekC,EAAW,OAAS,QACnC,gBAAuBpD,QAAAA,EACvBqD,SAAUA,IAAanC,EAAW,IAAM,MACxC,cAAU,IAETnG,EAGP,EAGAkI,EAAIxI,SAAW,MACfwI,EAAIzB,aAAeA,ECnFnB,IAAAnF,EAAA,CAAA,WAAA,YAAA,cAAA,KAAA,WAAA,qBAImB2G,EAAG,wBAChBxB,EAAe,CACnBpD,UAAW4E,EACX3B,aAAa,EACbF,kBAAsB6B,EAAa,cAc/BM,EAAW,SAAChI,GAChB,IAAA4H,IAQI5H,EAPFP,SACAqD,EAME9C,EANF8C,UACAiD,EAKE/F,EALF+F,YACArB,EAIE1E,EAJF0E,GACAkB,EAGE5F,EAHF4F,SACAC,EAEE7F,EAFF6F,kBACGrC,EAAUgE,EACXxH,EAAKe,GAET,OACE0C,EAAA,QAAAC,cAAA,MAAAC,OAAAC,OAAA,GACMJ,EAAU,CACdV,UAAWe,EAAGf,GACX+C,EAAAA,CAAAA,EAAAA,EAAAA,GAAoBD,MAEvB6B,KAAK,WACL/C,GAAYA,QAAAA,EACZ,kBAAA,MAAuBA,IAEtBqB,GAAeH,EAAWnG,EAAW,KAG5C,EAEAuI,EAAS7I,SAAW,WAEpB6I,EAAS9B,aAAeA"}